# Generated by Django 4.1.7 on 2023-04-14 05:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Paesu_Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ck_holiday', models.CharField(max_length=4, null=True, verbose_name='휴일체크')),
                ('ck_date', models.DateField(null=True, verbose_name='기록날짜')),
                ('ck_weather', models.CharField(max_length=20, null=True, verbose_name='날씨')),
                ('ck_temperature', models.CharField(max_length=20, null=True, verbose_name='기온')),
                ('op_start', models.CharField(choices=[('1', '1시'), ('2', '2시'), ('3', '3시'), ('4', '4시'), ('5', '5시'), ('6', '6시'), ('7', '7시'), ('8', '8시'), ('9', '9시'), ('10', '10시'), ('11', '11시'), ('12', '12시'), ('13', '13시'), ('14', '14시'), ('15', '15시'), ('16', '16시'), ('17', '17시'), ('18', '18시'), ('19', '19시'), ('20', '20시'), ('21', '21시'), ('22', '22시'), ('23', '23시'), ('24', '24시')], default=9, max_length=10, verbose_name='운영시작시간')),
                ('op_end', models.CharField(choices=[('1', '1시'), ('2', '2시'), ('3', '3시'), ('4', '4시'), ('5', '5시'), ('6', '6시'), ('7', '7시'), ('8', '8시'), ('9', '9시'), ('10', '10시'), ('11', '11시'), ('12', '12시'), ('13', '13시'), ('14', '14시'), ('15', '15시'), ('16', '16시'), ('17', '17시'), ('18', '18시'), ('19', '19시'), ('20', '20시'), ('21', '21시'), ('22', '22시'), ('23', '23시'), ('24', '24시')], default=18, max_length=10, verbose_name='운영종료시간')),
                ('emission_start', models.CharField(choices=[('1', '1시'), ('2', '2시'), ('3', '3시'), ('4', '4시'), ('5', '5시'), ('6', '6시'), ('7', '7시'), ('8', '8시'), ('9', '9시'), ('10', '10시'), ('11', '11시'), ('12', '12시'), ('13', '13시'), ('14', '14시'), ('15', '15시'), ('16', '16시'), ('17', '17시'), ('18', '18시'), ('19', '19시'), ('20', '20시'), ('21', '21시'), ('22', '22시'), ('23', '23시'), ('24', '24시')], default=9, max_length=10, verbose_name='배출시설가동 시작시간')),
                ('emission_end', models.CharField(choices=[('1', '1시'), ('2', '2시'), ('3', '3시'), ('4', '4시'), ('5', '5시'), ('6', '6시'), ('7', '7시'), ('8', '8시'), ('9', '9시'), ('10', '10시'), ('11', '11시'), ('12', '12시'), ('13', '13시'), ('14', '14시'), ('15', '15시'), ('16', '16시'), ('17', '17시'), ('18', '18시'), ('19', '19시'), ('20', '20시'), ('21', '21시'), ('22', '22시'), ('23', '23시'), ('24', '24시')], default=18, max_length=10, verbose_name='배출시설 가동 종료시간')),
                ('prev_start', models.CharField(choices=[('1', '1시'), ('2', '2시'), ('3', '3시'), ('4', '4시'), ('5', '5시'), ('6', '6시'), ('7', '7시'), ('8', '8시'), ('9', '9시'), ('10', '10시'), ('11', '11시'), ('12', '12시'), ('13', '13시'), ('14', '14시'), ('15', '15시'), ('16', '16시'), ('17', '17시'), ('18', '18시'), ('19', '19시'), ('20', '20시'), ('21', '21시'), ('22', '22시'), ('23', '23시'), ('24', '24시')], default=9, max_length=10, verbose_name='방지시설가동 시작시간')),
                ('prev_end', models.CharField(choices=[('1', '1시'), ('2', '2시'), ('3', '3시'), ('4', '4시'), ('5', '5시'), ('6', '6시'), ('7', '7시'), ('8', '8시'), ('9', '9시'), ('10', '10시'), ('11', '11시'), ('12', '12시'), ('13', '13시'), ('14', '14시'), ('15', '15시'), ('16', '16시'), ('17', '17시'), ('18', '18시'), ('19', '19시'), ('20', '20시'), ('21', '21시'), ('22', '22시'), ('23', '23시'), ('24', '24시')], default=18, max_length=10, verbose_name='방지시설 가동 종료시간')),
                ('waterworks_prevd', models.CharField(blank=True, max_length=10, null=True, verbose_name='전일 상수도 계측값')),
                ('waterworks_today', models.CharField(blank=True, max_length=10, null=True, verbose_name='금일 상수도 계측값')),
                ('waterworks_used', models.CharField(blank=True, max_length=10, null=True, verbose_name='사용 상수도 계측값')),
                ('waterworks_time', models.CharField(blank=True, max_length=10, null=True, verbose_name=' 상수도 계측시간')),
                ('underwater_prevd', models.CharField(blank=True, max_length=10, null=True, verbose_name='전일 지하수 계측값')),
                ('underwater_today', models.CharField(blank=True, max_length=10, null=True, verbose_name='금일 지하수 계측값')),
                ('underwater_used', models.CharField(blank=True, max_length=10, null=True, verbose_name='사용 지하수 계측값')),
                ('underwater_time', models.CharField(blank=True, max_length=10, null=True, verbose_name=' 지하수 계측시간')),
                ('diswaste_prevd', models.CharField(blank=True, max_length=10, null=True, verbose_name='전일 폐수배출량')),
                ('diswaste_today', models.CharField(blank=True, max_length=10, null=True, verbose_name='금일 폐수배출량')),
                ('diswaste_used', models.CharField(blank=True, max_length=10, null=True, verbose_name='사용 폐수배출량')),
                ('poweruse_prevd', models.CharField(blank=True, max_length=10, null=True, verbose_name='전일 전력량계 사용량')),
                ('poweruse_today', models.CharField(blank=True, max_length=10, null=True, verbose_name='금일 전력량계 사용량')),
                ('poweruse_used', models.CharField(blank=True, max_length=10, null=True, verbose_name='전력량계 사용량 ')),
                ('poweruse_time', models.CharField(blank=True, max_length=10, null=True, verbose_name='전력량계 기록 시간')),
                ('poweruse_start', models.CharField(blank=True, max_length=10, null=True, verbose_name='전력량계 가동 시작시간')),
                ('poweruse_end', models.CharField(blank=True, max_length=10, null=True, verbose_name='전력량계 가동 종료시간')),
                ('poweruse_etc', models.CharField(blank=True, max_length=60, null=True, verbose_name='전력량계 참고사항')),
                ('genwaster_prevd', models.CharField(blank=True, max_length=10, null=True, verbose_name='전일 폐수발생량')),
                ('genwaster_today', models.CharField(blank=True, max_length=10, null=True, verbose_name='금일 폐수발생량')),
                ('genwaster_used', models.CharField(blank=True, max_length=10, null=True, verbose_name='사용 폐수발생량')),
                ('reuse_prevd', models.CharField(blank=True, max_length=10, null=True, verbose_name='전일 재사용량')),
                ('reuse_today', models.CharField(blank=True, max_length=10, null=True, verbose_name='금일 재사용량')),
                ('reuse_used', models.CharField(blank=True, max_length=10, null=True, verbose_name='사용 재사용량')),
                ('at_washnum', models.CharField(blank=True, max_length=10, null=True, verbose_name='세차대수')),
                ('at_detergent', models.CharField(blank=True, max_length=10, null=True, verbose_name='세제')),
                ('at_detergent_use', models.CharField(blank=True, max_length=10, null=True, verbose_name='세차1대당 세제사용량')),
                ('at_wax', models.CharField(blank=True, max_length=10, null=True, verbose_name='왁스')),
                ('at_wax_use', models.CharField(blank=True, max_length=10, null=True, verbose_name='세차1대당 왁스사용량')),
                ('at_pom', models.CharField(blank=True, max_length=10, null=True, verbose_name='폼')),
                ('at_pom_use', models.CharField(blank=True, max_length=10, null=True, verbose_name='세차1대당 폼사용량')),
                ('at_sub1', models.CharField(blank=True, max_length=40, null=True, verbose_name='추가원료1')),
                ('at_sub1_memo', models.CharField(blank=True, max_length=40, null=True, verbose_name='추가원료1 설명')),
                ('at_sub1_use', models.CharField(blank=True, max_length=10, null=True, verbose_name='세차1대당 추가원료1 사용량')),
                ('at_sub2', models.CharField(blank=True, max_length=40, null=True, verbose_name='추가원료2')),
                ('at_sub2_memo', models.CharField(blank=True, max_length=40, null=True, verbose_name='추가원료2 설명')),
                ('at_sub2_use', models.CharField(blank=True, max_length=10, null=True, verbose_name='세차1대당 추가원료2 사용량')),
                ('at_sub3', models.CharField(blank=True, max_length=40, null=True, verbose_name='추가원료3')),
                ('at_sub3_memo', models.CharField(blank=True, max_length=40, null=True, verbose_name='추가원료3 설명')),
                ('at_sub3_use', models.CharField(blank=True, max_length=10, null=True, verbose_name='세차1대당 추가원료3 사용량')),
                ('med1_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='약품명1')),
                ('med1_used', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명1 사용량')),
                ('med1_balance', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명1 잔고량')),
                ('med1_buy', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명1 구입량')),
                ('med1_mz', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명1 미정항목')),
                ('med1_etc', models.CharField(blank=True, max_length=60, null=True, verbose_name='약품명1 비고')),
                ('med2_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='약품명2')),
                ('med2_used', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명2 사용량')),
                ('med2_balance', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명2 잔고량')),
                ('med2_buy', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명2 구입량')),
                ('med2_mz', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명2 미정항목')),
                ('med2_etc', models.CharField(blank=True, max_length=60, null=True, verbose_name='약품명2 비고')),
                ('med3_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='약품명3')),
                ('med3_used', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명3 사용량')),
                ('med3_balance', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명3 잔고량')),
                ('med3_buy', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명3 구입량')),
                ('med3_mz', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명3 미정항목')),
                ('med3_etc', models.CharField(blank=True, max_length=60, null=True, verbose_name='약품명3 비고')),
                ('med4_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='약품명4')),
                ('med4_used', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명4 사용량')),
                ('med4_balance', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명4 잔고량')),
                ('med4_buy', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명4 구입량')),
                ('med4_mz', models.CharField(blank=True, max_length=10, null=True, verbose_name='약품명4 미정항목')),
                ('med4_etc', models.CharField(blank=True, max_length=60, null=True, verbose_name='약품명4 비고')),
                ('sluge_gene', models.CharField(max_length=10, null=True, verbose_name='슬러지발생량')),
                ('sluge_used', models.CharField(max_length=10, null=True, verbose_name='슬러지처리량')),
                ('sluge_keep', models.CharField(max_length=10, null=True, verbose_name='슬러지보관량')),
                ('sluge_func', models.CharField(max_length=10, null=True, verbose_name='슬러지함수률')),
                ('sluge_place', models.CharField(max_length=60, null=True, verbose_name='슬러지보관장소')),
                ('sluge_selfplace', models.CharField(max_length=60, null=True, verbose_name='슬러지처리장소')),
                ('sluge_corp', models.CharField(max_length=60, null=True, verbose_name='위탁처리업소명')),
                ('ck_remarks', models.CharField(max_length=200, null=True, verbose_name='특이사항')),
                ('ck_advise', models.CharField(max_length=200, null=True, verbose_name='지도사항')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='아이디')),
            ],
            options={
                'verbose_name': '레포트정보',
                'verbose_name_plural': '레포트정보',
                'db_table': 'PAESU_RECORD_TB',
            },
        ),
        migrations.AddConstraint(
            model_name='paesu_record',
            constraint=models.UniqueConstraint(fields=('user_id', 'ck_date'), name='유저 기록 unique key'),
        ),
    ]
